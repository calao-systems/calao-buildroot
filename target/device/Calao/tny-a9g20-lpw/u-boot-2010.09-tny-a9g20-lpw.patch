diff --git a/Makefile b/Makefile
index fa1bddf..3f1883e 100644
--- a/Makefile
+++ b/Makefile
@@ -2029,9 +2029,11 @@ SBC35_A9G20_config	:	unconfig
 
 TNY_A9G20_NANDFLASH_config \
 TNY_A9G20_EEPROM_config \
+TNY_A9G20_LPW_config \
 TNY_A9G20_config \
 TNY_A9260_NANDFLASH_config \
 TNY_A9260_EEPROM_config \
+TNY_A9260_LPW_config \
 TNY_A9260_config	:	unconfig
 	@mkdir -p $(obj)include
 	@echo "#define CONFIG_$(@:_config=) 1" >$(obj)include/config.h
diff --git a/board/calao/tny_a9260/tny_a9260.c b/board/calao/tny_a9260/tny_a9260.c
index d51ca15..dbcff5c 100644
--- a/board/calao/tny_a9260/tny_a9260.c
+++ b/board/calao/tny_a9260/tny_a9260.c
@@ -52,6 +52,7 @@ static void tny_a9260_nand_hw_init(void)
 	at91_sys_write(AT91_MATRIX_EBICSA,
 		       csa | AT91_MATRIX_CS3A_SMC_SMARTMEDIA);
 
+#if defined(CONFIG_TNY_A9260) || defined(CONFIG_TNY_A9260_LPW) || defined(CONFIG_TNY_A9G20_LPW)
 	/* Configure SMC CS3 for NAND/SmartMedia */
 	at91_sys_write(AT91_SMC_SETUP(3),
 		       AT91_SMC_NWESETUP_(1) | AT91_SMC_NCS_WRSETUP_(0) |
@@ -64,12 +65,23 @@ static void tny_a9260_nand_hw_init(void)
 	at91_sys_write(AT91_SMC_MODE(3),
 		       AT91_SMC_READMODE | AT91_SMC_WRITEMODE |
 		       AT91_SMC_EXNWMODE_DISABLE |
-#ifdef CONFIG_SYS_NAND_DBW_16
-		       AT91_SMC_DBW_16 |
-#else /* CONFIG_SYS_NAND_DBW_8 */
 		       AT91_SMC_DBW_8 |
-#endif
 		       AT91_SMC_TDF_(2));
+#elif defined(CONFIG_TNY_A9G20)
+	at91_sys_write(AT91_SMC_SETUP(3),
+		       AT91_SMC_NWESETUP_(2) | AT91_SMC_NCS_WRSETUP_(0) |
+		       AT91_SMC_NRDSETUP_(2) | AT91_SMC_NCS_RDSETUP_(0));
+	at91_sys_write(AT91_SMC_PULSE(3),
+		       AT91_SMC_NWEPULSE_(4) | AT91_SMC_NCS_WRPULSE_(4) |
+		       AT91_SMC_NRDPULSE_(4) | AT91_SMC_NCS_RDPULSE_(4));
+	at91_sys_write(AT91_SMC_CYCLE(3),
+		       AT91_SMC_NWECYCLE_(7) | AT91_SMC_NRDCYCLE_(7));
+	at91_sys_write(AT91_SMC_MODE(3),
+		       AT91_SMC_READMODE | AT91_SMC_WRITEMODE |
+		       AT91_SMC_EXNWMODE_DISABLE |
+		       AT91_SMC_DBW_8 |
+		       AT91_SMC_TDF_(3));
+#endif
 
 	at91_sys_write(AT91_PMC_PCER, 1 << AT91SAM9260_ID_PIOC);
 
@@ -80,14 +92,55 @@ static void tny_a9260_nand_hw_init(void)
 	at91_set_gpio_output(CONFIG_SYS_NAND_ENABLE_PIN, 1);
 }
 
+#ifdef CONFIG_MACB
+static void tny_a9260_macb_hw_init(void)
+{
+	unsigned long rstc;
+
+	/* Enable clock */
+	at91_sys_write(AT91_PMC_PCER, 1 << AT91SAM9260_ID_EMAC);
+
+	/*
+	 * Disable pull-up on:
+	 *	RXER (PA18) => PHYAD0 (LAN8720: MOB-TNY-A9xxx-MD2)
+	 *
+	 * PHY has internal pull-down
+	 */
+	writel(pin_to_mask(AT91_PIN_PA18),
+	       pin_to_controller(AT91_PIN_PA0) + PIO_PUDR);
+
+	rstc = at91_sys_read(AT91_RSTC_MR) & AT91_RSTC_ERSTL;
+
+	at91_sys_write(AT91_RSTC_MR, AT91_RSTC_KEY & 0xFF000000);
+
+	/* Need to reset PHY -> 500ms reset */
+	at91_sys_write(AT91_RSTC_MR, AT91_RSTC_KEY |
+				     (AT91_RSTC_ERSTL & (0x0D << 8)) );
+
+	at91_sys_write(AT91_RSTC_CR, AT91_RSTC_KEY | AT91_RSTC_EXTRST);
+
+	/* Wait for end hardware reset */
+	while (!(at91_sys_read(AT91_RSTC_SR) & AT91_RSTC_NRSTL));
+
+	/* Restore NRST value */
+	at91_sys_write(AT91_RSTC_MR, AT91_RSTC_KEY | (rstc) );
+
+	/* Re-enable pull-up */
+	writel(pin_to_mask(AT91_PIN_PA18),
+	       pin_to_controller(AT91_PIN_PA0) + PIO_PUER);
+
+	at91_macb_hw_init();
+}
+#endif
+
 int board_init(void)
 {
 	/* Enable Ctrlc */
 	console_init_f();
 
-#if defined(CONFIG_TNY_A9260)
+#if defined(CONFIG_TNY_A9260) || defined(CONFIG_TNY_A9260_LPW)
 	gd->bd->bi_arch_number = MACH_TYPE_TNY_A9260;
-#elif defined(CONFIG_TNY_A9G20)
+#elif defined(CONFIG_TNY_A9G20) || defined(CONFIG_TNY_A9G20_LPW)
 	gd->bd->bi_arch_number = MACH_TYPE_TNY_A9G20;
 #endif
 	/* adress of boot parameters */
@@ -95,7 +148,12 @@ int board_init(void)
 
 	at91_serial_hw_init();
 	tny_a9260_nand_hw_init();
+#ifdef CONFIG_ATMEL_SPI
 	at91_spi0_hw_init(1 << 5);
+#endif
+	#ifdef CONFIG_MACB
+	tny_a9260_macb_hw_init();
+#endif
 	return 0;
 }
 
@@ -108,3 +166,31 @@ int dram_init(void)
 	gd->bd->bi_dram[0].size = PHYS_SDRAM_SIZE;
 	return 0;
 }
+#ifdef CONFIG_SOFT_I2C
+void i2c_init_board(void)
+{
+	/* Enable clock */
+	at91_sys_write(AT91_PMC_PCER, 1 << AT91SAM9260_ID_PIOA);
+
+	at91_set_pio_output(AT91_PIO_PORTA,23,1);
+	at91_set_pio_multi_drive(AT91_PIO_PORTA,23,1);
+
+	at91_set_pio_output(AT91_PIO_PORTA,24,1);
+	at91_set_pio_multi_drive(AT91_PIO_PORTA,24,1);
+}
+#endif
+
+#ifdef CONFIG_RESET_PHY_R
+void reset_phy(void)
+{
+}
+#endif
+
+int board_eth_init(bd_t *bis)
+{
+	int rc = 0;
+#ifdef CONFIG_MACB
+	rc = macb_eth_initialize(0, (void *)AT91SAM9260_BASE_EMAC, 0x00);
+#endif
+	return rc;
+}
diff --git a/drivers/rtc/Makefile b/drivers/rtc/Makefile
index 98734db..d9d7cad 100644
--- a/drivers/rtc/Makefile
+++ b/drivers/rtc/Makefile
@@ -59,6 +59,7 @@ COBJS-$(CONFIG_RTC_PCF8563) += pcf8563.o
 COBJS-$(CONFIG_RTC_PL031) += pl031.o
 COBJS-$(CONFIG_RTC_RS5C372A) += rs5c372.o
 COBJS-$(CONFIG_RTC_RTC4543) += rtc4543.o
+COBJS-$(CONFIG_RTC_RV3029C2) += rv3029c2.o
 COBJS-$(CONFIG_RTC_RX8025) += rx8025.o
 COBJS-$(CONFIG_RTC_S3C24X0) += s3c24x0_rtc.o
 COBJS-$(CONFIG_RTC_S3C44B0) += s3c44b0_rtc.o
diff --git a/drivers/rtc/rv3029c2.c b/drivers/rtc/rv3029c2.c
new file mode 100644
index 0000000..fb6f230
--- /dev/null
+++ b/drivers/rtc/rv3029c2.c
@@ -0,0 +1,260 @@
+/*
+ * (C) Copyright 2010
+ * GrÃ©gory Hermant, calao-systems, gregory.hermant@calao-systems.com
+ *
+ * Modelled after the isl1208 driver
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+ * Date & Time support (no alarms) for MicroCrystal
+ * RV3029C2 Real Time Clock (RTC).
+ */
+
+#include <common.h>
+#include <command.h>
+#include <rtc.h>
+#include <i2c.h>
+#define DEBUG_RTC	1
+/*---------------------------------------------------------------------*/
+#ifdef DEBUG_RTC
+#define DEBUGR(fmt,args...) printf(fmt ,##args)
+#else
+#define DEBUGR(fmt,args...)
+#endif
+/*---------------------------------------------------------------------*/
+
+/*
+ * RTC register addresses
+ */
+
+#define RTC_CTRL_1_REG_ADDR	0x0
+#define RTC_CTRL_STAT_REG_ADDR	0x3
+#define RTC_CTRL_RST_REG_ADDR	0x4
+#define RTC_SEC_REG_ADDR	0x8
+#define RTC_MIN_REG_ADDR	0x9
+#define RTC_HR_REG_ADDR		0xA
+#define RTC_DATE_REG_ADDR	0xB
+#define RTC_DAY_REG_ADDR	0xC
+#define RTC_MON_REG_ADDR	0xD
+#define RTC_YR_REG_ADDR		0xE
+#define RTC_CTRL_E2P_REG_ADDR	0x30
+
+/*
+ * RTC control_1 register bits
+ */
+#define RTC_CTRL_1_BIT_WE	0x01	/* 1HZ CLK FOR WATCH ENABLE BIT */
+#define RTC_CTRL_1_BIT_EERE	0x08	/* Automatic EEPROM refresh */
+
+/*
+ * RTC control status register bits
+ */
+#define RTC_STAT_BIT_BAT	0x02	/* BATTERY BIT */
+#define RTC_STAT_BIT_RTCF	0x01	/* REAL TIME CLOCK FAIL BIT */
+#define RTC_CTRL_STAT_VL1	0x08	/* Vlow1 bit	*/
+#define RTC_CTRL_STAT_VL2	0x04	/* Vlow2 bit	*/
+#define RTC_CTRL_STAT_SR	0x10	/* SR flag */
+#define RTC_CTRL_STAT_PON	0x20	/* Power ON bit	*/
+#define RTC_CTRL_STAT_EEBUSY	0x80	/* EEPROM Busy bit	*/
+
+/*
+ * RTC control reset register bits
+ */
+#define RTC_CTRL_RST_BIT_SYSR	0x10	/* System Reset	*/
+
+/*
+ * RTC hours register bits
+ */
+#define RTC_HR_12_24_BIT	0x60	/* 12-24 (0=24; 1=12) */
+#define RTC_HR_20_PM_BIT	0x40	/* 20_PM (1=PM) */
+
+/*
+ * RTC eeprom control register bits
+ */
+#define RTC_CTRL_E2P_R1K_BIT	0x10
+#define RTC_CTRL_E2P_R5K_BIT	0x20
+#define RTC_CTRL_E2P_R20K_BIT	0x40
+#define RTC_CTRL_E2P_R80K_BIT	0x80
+
+static uchar rtc_read (uchar reg);
+static void rtc_write (uchar reg, uchar val);
+
+/*
+ * Get the current time from the RTC
+ */
+
+int rtc_get (struct rtc_time *tmp)
+{
+	int rel = 0;
+	uchar sec, min, hour, mday, wday, mon, year, status;
+
+	status = rtc_read (RTC_CTRL_STAT_REG_ADDR);
+	sec = rtc_read (RTC_SEC_REG_ADDR);
+	min = rtc_read (RTC_MIN_REG_ADDR);
+	hour = rtc_read (RTC_HR_REG_ADDR);
+	wday = rtc_read (RTC_DAY_REG_ADDR);
+	mday = rtc_read (RTC_DATE_REG_ADDR);
+	mon = rtc_read (RTC_MON_REG_ADDR);
+	year = rtc_read (RTC_YR_REG_ADDR);
+
+	DEBUGR ("Get RTC year: %02x mon: %02x mday: %02x wday: %02x "
+		"hr: %02x min: %02x sec: %02x status: %02x\n",
+		year, mon, mday, wday, hour, min, sec, status);
+
+	if ((status & RTC_CTRL_STAT_PON) | (status & RTC_CTRL_STAT_VL2)) {
+		printf ("### Warning: Date & Time corrupted \n");
+		printf ("### Please ajust the date & time \n");
+		rel = -1;
+	} 
+
+	tmp->tm_sec  = bcd2bin (sec & 0x7F);
+	tmp->tm_min  = bcd2bin (min & 0x7F);
+	tmp->tm_hour = bcd2bin (hour & 0x3F);
+	tmp->tm_mday = bcd2bin (mday & 0x3F);
+	tmp->tm_mon  = bcd2bin (mon & 0x1F) ;
+	tmp->tm_year = bcd2bin (year & 0x7F)+2000;
+	tmp->tm_wday = bcd2bin (wday & 0x07) -1;
+	tmp->tm_yday = 0;
+	tmp->tm_isdst= 0;
+
+	DEBUGR ("Get DATE: %4d-%02d-%02d (wday=%d)  TIME: %2d:%02d:%02d\n",
+		tmp->tm_year, tmp->tm_mon, tmp->tm_mday, tmp->tm_wday,
+		tmp->tm_hour, tmp->tm_min, tmp->tm_sec);
+
+	return rel;
+}
+
+/*
+ * Set the RTC
+ */
+int rtc_set (struct rtc_time *tmp)
+{
+	DEBUGR ("Set DATE: %4d-%02d-%02d (wday=%d)  TIME: %2d:%02d:%02d\n",
+		tmp->tm_year, tmp->tm_mon, tmp->tm_mday, tmp->tm_wday,
+		tmp->tm_hour, tmp->tm_min, tmp->tm_sec);
+
+	/* disable 1HZ clk source for watch */
+	rtc_write(RTC_CTRL_1_REG_ADDR,
+		rtc_read(RTC_CTRL_1_REG_ADDR) & ~RTC_CTRL_1_BIT_WE);
+
+	rtc_write (RTC_YR_REG_ADDR, bin2bcd (tmp->tm_year % 100));
+	rtc_write (RTC_MON_REG_ADDR, bin2bcd (tmp->tm_mon));
+	rtc_write (RTC_DAY_REG_ADDR, bin2bcd ((tmp->tm_wday)+1));
+	rtc_write (RTC_DATE_REG_ADDR, bin2bcd (tmp->tm_mday));
+	rtc_write (RTC_HR_REG_ADDR, bin2bcd (tmp->tm_hour) & ~(RTC_HR_12_24_BIT) ); /* 24h mode */
+	rtc_write (RTC_MIN_REG_ADDR, bin2bcd (tmp->tm_min));
+	rtc_write (RTC_SEC_REG_ADDR, bin2bcd (tmp->tm_sec));
+
+	/* clear PON bit */
+	rtc_write(RTC_CTRL_STAT_REG_ADDR,
+			rtc_read(RTC_CTRL_STAT_REG_ADDR) & ~(RTC_CTRL_STAT_PON));
+
+	/* enable 1HZ clk source for watch */
+	rtc_write(RTC_CTRL_1_REG_ADDR,
+		rtc_read(RTC_CTRL_1_REG_ADDR) | RTC_CTRL_1_BIT_WE);
+
+	return 0;
+}
+
+void rtc_reset (void)
+{
+	uchar busy, trickle, sr;
+
+	/* Execute a system reset */
+	rtc_write(RTC_CTRL_RST_REG_ADDR,
+			rtc_read(RTC_CTRL_RST_REG_ADDR) | RTC_CTRL_RST_BIT_SYSR);
+
+	/* Wait until SR bit = 1 */	
+	reset_timer_masked();
+	do {
+		sr = rtc_read(RTC_CTRL_STAT_REG_ADDR);
+	  	if (sr & RTC_CTRL_STAT_SR)
+			break;
+
+	} while (get_timer_masked() < 5000);	/* 5ms */
+
+	if (!(sr & RTC_CTRL_STAT_SR))
+		printf ("*** System reset not executed: Time out !\n");
+	
+	/* clear SR flag */
+	rtc_write(RTC_CTRL_STAT_REG_ADDR,
+			rtc_read(RTC_CTRL_STAT_REG_ADDR) & ~(RTC_CTRL_STAT_SR));
+
+	/* Enable the trickle charger */
+
+	/* Disable Automatic EEPROM Refresh */
+	rtc_write(RTC_CTRL_1_REG_ADDR,
+			rtc_read(RTC_CTRL_1_REG_ADDR) & ~(RTC_CTRL_1_BIT_EERE));
+	
+	/* Wait until busy bit=0 */	
+	reset_timer_masked();
+	do {
+		busy = rtc_read(RTC_CTRL_STAT_REG_ADDR);
+	  	if (!(busy & RTC_CTRL_STAT_EEBUSY))
+			break;
+
+	} while (get_timer_masked() < 30000);	/* 30ms */
+
+	if (busy & RTC_CTRL_STAT_EEBUSY)
+		printf ("*** EEPROM busy: Time out !\n");
+
+	/* Read the trickle value */
+	trickle = rtc_read(RTC_CTRL_E2P_REG_ADDR);
+
+	if (trickle == RTC_CTRL_E2P_R1K_BIT) {
+		printf ("*** Trickle value already initialized ... \n");
+	} else {
+
+		/* Init the trickle value in the EEPROM control page register */
+		rtc_write(RTC_CTRL_E2P_REG_ADDR,
+				rtc_read(RTC_CTRL_E2P_REG_ADDR) | (RTC_CTRL_E2P_R1K_BIT));
+	
+		/* Wait until busy bit=0 */
+		reset_timer_masked();
+		do {
+			busy = rtc_read(RTC_CTRL_STAT_REG_ADDR);
+	  		if (!(busy & RTC_CTRL_STAT_EEBUSY))
+				break;
+
+		} while (get_timer_masked() < 30000); /* 30ms */
+
+		if (busy & RTC_CTRL_STAT_EEBUSY)
+		printf ("*** EEPROM busy: Time out !\n");
+	}
+
+	/* Enable Automatic EEPROM Refresh */
+	rtc_write(RTC_CTRL_1_REG_ADDR,
+			rtc_read(RTC_CTRL_1_REG_ADDR) | (RTC_CTRL_1_BIT_EERE));
+
+	/* clear PON bit */
+	rtc_write(RTC_CTRL_STAT_REG_ADDR,
+			rtc_read(RTC_CTRL_STAT_REG_ADDR) & ~(RTC_CTRL_STAT_PON));
+}
+
+/*
+ * Helper functions
+ */
+
+static uchar rtc_read (uchar reg)
+{
+	return (i2c_reg_read (CONFIG_SYS_I2C_RTC_ADDR, reg));
+}
+
+static void rtc_write (uchar reg, uchar val)
+{
+	i2c_reg_write (CONFIG_SYS_I2C_RTC_ADDR, reg, val);
+}
diff --git a/include/configs/tny_a9260.h b/include/configs/tny_a9260.h
index 5af2af3..6ad4ff7 100644
--- a/include/configs/tny_a9260.h
+++ b/include/configs/tny_a9260.h
@@ -6,7 +6,8 @@
  * Copyright (C) 2009
  * Albin Tonnerre, Free Electrons <albin.tonnerre@free-electrons.com>
  *
- * Configuation settings for the Calao TNY-A9260 and TNY-A9G20 boards
+ * Configuation settings for the Calao TNY-A9260/TNY-A9260-LPW
+ * and TNY-A9G20/TNY-A9G20-LPW boards
  *
  * See file CREDITS for list of people who contributed to this
  * project.
@@ -38,16 +39,16 @@
 #define CONFIG_TNY_A9G20
 #endif
 
-#ifdef CONFIG_TNY_A9260
+#if defined(CONFIG_TNY_A9260) || defined(CONFIG_TNY_A9260_LPW)
 #define CONFIG_AT91SAM9260
 #else
-#define CONFIG_AT91SAM9G20
+#define CONFIG_AT91SAM9G20 
 #endif
 
-#if defined(CONFIG_TNY_A9260_NANDFLASH) || defined(CONFIG_TNY_A9G20_NANDFLASH)
-#define CONFIG_ENV_IS_IN_NAND
-#else
+#if defined(CONFIG_TNY_A9260_EEPROM) || defined(CONFIG_TNY_A9G20_EEPROM) 
 #define CONFIG_ENV_IS_IN_EEPROM
+#else
+#define CONFIG_ENV_IS_IN_NAND
 #endif
 
 /* ARM asynchronous clock */
@@ -78,23 +79,66 @@
 #define CONFIG_BOOTDELAY	3
 
 /*
+ * BOOTP options
+ */
+#define CONFIG_BOOTP_BOOTFILESIZE	1
+#define CONFIG_BOOTP_BOOTPATH		1
+#define CONFIG_BOOTP_GATEWAY		1
+#define CONFIG_BOOTP_HOSTNAME		1
+
+/*
  * Command line configuration.
  */
 #include <config_cmd_default.h>
 #undef CONFIG_CMD_BDI
 #undef CONFIG_CMD_FPGA
-#undef CONFIG_CMD_IMI
 #undef CONFIG_CMD_IMLS
 #undef CONFIG_CMD_LOADS
-#undef CONFIG_CMD_NET
-#undef CONFIG_CMD_SOURCE
-#undef CONFIG_CMD_USB
+
+#define CONFIG_CMD_PING		1
+#define CONFIG_CMD_DHCP		1
+#define CONFIG_CMD_USB		1
+
+#if defined(CONFIG_TNY_A9260_LPW) || defined(CONFIG_TNY_A9G20_LPW)
+#define CONFIG_CMD_DATE		1
+#define CONFIG_CMD_I2C		1
+/* I2C SOFT */
+#define CONFIG_SOFT_I2C			1
+#define CONFIG_SYS_I2C_SPEED		50000
+
+#define AT91_PIN_SDA			23		/* AT91_PIO_PA23 */
+#define AT91_PIN_SCL			24		/* AT91_PIO_PA24 */
+
+#define CONFIG_SYS_I2C_INIT_BOARD
+
+#define I2C_INIT	i2c_init_board();
+#define I2C_ACTIVE 	NULL
+
+#define I2C_TRISTATE	NULL
+
+#define I2C_READ	(at91_get_pio_value(0,AT91_PIN_SDA) != 0);
+#define I2C_SDA(bit)						\
+	if (bit)						\
+		at91_set_pio_value(0,AT91_PIN_SDA,1);		\
+	else							\
+		at91_set_pio_value(0,AT91_PIN_SDA,0);
+#define I2C_SCL(bit)						\
+	if (bit)						\
+		at91_set_pio_value(0,AT91_PIN_SCL,1);		\
+	else							\
+		at91_set_pio_value(0,AT91_PIN_SCL,0);
+
+#define I2C_DELAY	udelay(2500000/CONFIG_SYS_I2C_SPEED)
+#define CONFIG_RTC_RV3029C2
+#define CONFIG_SYS_I2C_RTC_ADDR	0x56
+#endif
 
 /* SDRAM */
 #define CONFIG_NR_DRAM_BANKS		1
 #define PHYS_SDRAM			0x20000000
 #define PHYS_SDRAM_SIZE			0x04000000	/* 64 megs */
 
+#if defined(CONFIG_TNY_A9260) || defined(CONFIG_TNY_A9G20)
 /* SPI EEPROM */
 #define CONFIG_SPI
 #define CONFIG_CMD_SPI
@@ -105,6 +149,7 @@
 #define CONFIG_SPI_M95XXX
 #define CONFIG_SYS_EEPROM_SIZE 0x10000
 #define CONFIG_SYS_EEPROM_PAGE_WRITE_BITS 5
+#endif
 
 /* NAND flash */
 #define CONFIG_CMD_NAND
@@ -120,9 +165,27 @@
 #define CONFIG_SYS_NAND_READY_PIN		AT91_PIN_PC13
 
 /* NOR flash - no real flash on this board */
-#define CONFIG_SYS_NO_FLASH			1
+#define CONFIG_SYS_NO_FLASH		1
+
+/* Ethernet */
+#define CONFIG_MACB			1
+#define CONFIG_RMII			1
+#define CONFIG_NET_MULTI		1
+#define CONFIG_NET_RETRY_COUNT		20
+#define CONFIG_RESET_PHY_R		1
+#define CONFIG_MACB_SEARCH_PHY		1
+#define CONFIG_DOS_PARTITION		1
+#define CONFIG_CMD_FAT			1
 
+/* USB */
+#define CONFIG_USB_ATMEL
+#define CONFIG_USB_OHCI_NEW		1
 #define CONFIG_DOS_PARTITION		1
+#define CONFIG_SYS_USB_OHCI_CPU_INIT	1
+#define CONFIG_SYS_USB_OHCI_REGS_BASE	0x00500000	/* AT91SAM9260_UHP_BASE */
+#define CONFIG_SYS_USB_OHCI_SLOT_NAME	"at91sam9260"
+#define CONFIG_SYS_USB_OHCI_MAX_ROOT_PORTS	2
+#define CONFIG_USB_STORAGE		1
 #define CONFIG_CMD_FAT			1
 
 #define CONFIG_SYS_LOAD_ADDR			0x22000000	/* load address */
